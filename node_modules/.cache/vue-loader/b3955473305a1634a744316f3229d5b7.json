{"remainingRequest":"C:\\test-simplify\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\test-simplify\\src\\components\\login\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\test-simplify\\src\\components\\login\\Login.vue","mtime":1548627948699},{"path":"C:\\test-simplify\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\test-simplify\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\test-simplify\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\test-simplify\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n\r\nimport firebase from \"firebase\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      show: true,\r\n      isActive: true,\r\n      user: {\r\n        displayName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        emailLogin: \"\",\r\n        passwordLogin: \"\"\r\n      },\r\n      error: false\r\n    };\r\n  },\r\n  methods: {\r\n    updateAnnouncement(value) {\r\n      this.newText = value;\r\n    },\r\n    registerUser() {\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(this.user.email, this.user.password)\r\n        .then(user => {\r\n          this.authUser = user;\r\n          this.$router.replace(\"home\");\r\n        })\r\n        .catch(error => alert(\"ðŸ¤• \" + error.message));\r\n    },\r\n    loginUser: function() {\r\n      firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(\r\n          this.user.emailLogin,\r\n          this.user.passwordLogin\r\n        )\r\n        .then(user => {\r\n          this.authUser = user;\r\n          this.$router.replace(\"home\");\r\n        })\r\n        .catch(error => alert(\"ðŸ¤• \" + error.message));\r\n    },\r\n    signInWithGoogle() {\r\n      const provider = new firebase.auth.GoogleAuthProvider();\r\n      firebase\r\n        .auth()\r\n        .signInWithPopup(provider)\r\n        .catch(error => alert(\"ðŸ¤• \" + error.message))\r\n        .then(user => {\r\n          this.authUser = user;\r\n          this.$router.replace(\"home\");\r\n        });\r\n    }\r\n  },\r\n  created() {\r\n    this.$cookie.set(\"token\", true, { expires: \"1h\" });\r\n  },\r\n  mounted() {\r\n    if (localStorage.name) {\r\n      this.name = localStorage.name;\r\n    }\r\n  },\r\n  watch: {\r\n    name(newName) {\r\n      localStorage.name = newName;\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components/login","sourcesContent":["<template src=\"./login.html\"></template>\r\n\r\n<script>\r\nimport firebase from \"firebase\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      show: true,\r\n      isActive: true,\r\n      user: {\r\n        displayName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        emailLogin: \"\",\r\n        passwordLogin: \"\"\r\n      },\r\n      error: false\r\n    };\r\n  },\r\n  methods: {\r\n    updateAnnouncement(value) {\r\n      this.newText = value;\r\n    },\r\n    registerUser() {\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(this.user.email, this.user.password)\r\n        .then(user => {\r\n          this.authUser = user;\r\n          this.$router.replace(\"home\");\r\n        })\r\n        .catch(error => alert(\"ðŸ¤• \" + error.message));\r\n    },\r\n    loginUser: function() {\r\n      firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(\r\n          this.user.emailLogin,\r\n          this.user.passwordLogin\r\n        )\r\n        .then(user => {\r\n          this.authUser = user;\r\n          this.$router.replace(\"home\");\r\n        })\r\n        .catch(error => alert(\"ðŸ¤• \" + error.message));\r\n    },\r\n    signInWithGoogle() {\r\n      const provider = new firebase.auth.GoogleAuthProvider();\r\n      firebase\r\n        .auth()\r\n        .signInWithPopup(provider)\r\n        .catch(error => alert(\"ðŸ¤• \" + error.message))\r\n        .then(user => {\r\n          this.authUser = user;\r\n          this.$router.replace(\"home\");\r\n        });\r\n    }\r\n  },\r\n  created() {\r\n    this.$cookie.set(\"token\", true, { expires: \"1h\" });\r\n  },\r\n  mounted() {\r\n    if (localStorage.name) {\r\n      this.name = localStorage.name;\r\n    }\r\n  },\r\n  watch: {\r\n    name(newName) {\r\n      localStorage.name = newName;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style lang=\"scss\" src=\"./login.scss\" scoped>\r\n</style>\r\n"]}]}