{"remainingRequest":"C:\\test-simplify\\node_modules\\babel-loader\\lib\\index.js!C:\\test-simplify\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\test-simplify\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\test-simplify\\src\\components\\login\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\test-simplify\\src\\components\\login\\Login.vue","mtime":1548622448918},{"path":"C:\\test-simplify\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\test-simplify\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\test-simplify\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\test-simplify\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\test-simplify\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\test-simplify\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\test-simplify\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\test-simplify\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\n//\n//\nimport firebase from \"firebase\";\nexport default {\n  data: function data() {\n    return {\n      show: true,\n      isActive: true,\n      user: {\n        displayName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        emailLogin: \"\",\n        passwordLogin: \"\"\n      },\n      error: false\n    };\n  },\n  methods: {\n    updateAnnouncement: function updateAnnouncement(value) {\n      this.newText = value;\n    },\n    registerUser: function registerUser() {\n      var _this = this;\n\n      // if (\n      //   this.user.password !== this.user.confirmPassword ||\n      //   this.user.password.length < 6\n      // ) {\n      //   this.error = true;\n      // } else {\n      firebase.auth().createUserWithEmailAndPassword(this.user.email, this.user.password).then(function (user) {\n        _this.authUser = user;\n\n        _this.$router.replace(\"home\");\n      }).catch(function (error) {\n        return alert(\"ðŸ¤• \" + error.message);\n      }); //}\n    },\n    loginUser: function loginUser() {\n      var _this2 = this;\n\n      firebase.auth().signInWithEmailAndPassword(this.user.emailLogin, this.user.passwordLogin).then(function (user) {\n        _this2.authUser = user;\n\n        _this2.$router.replace(\"home\");\n      }).catch(function (error) {\n        return alert(\"ðŸ¤• \" + error.message);\n      }); // this.$cookie.set(\"Login\", \"credentials\", \"1H\");\n      // this.$cookie.get(\"test\");\n    },\n    signInWithGoogle: function signInWithGoogle() {\n      var _this3 = this;\n\n      var provider = new firebase.auth.GoogleAuthProvider();\n      firebase.auth().signInWithPopup(provider).catch(function (error) {\n        return alert(\"ðŸ¤• \" + error.message);\n      }).then(function (user) {\n        _this3.authUser = user;\n\n        _this3.$router.replace(\"home\");\n      });\n    } // created() {\n    //   this.$cookie.set(\"login\", \"password\", 1);\n    //   this.$cookie.get(\"test\");\n    // }\n\n  },\n  created: function created() {\n    this.$cookie.set(\"token\", true, {\n      expires: \"30s\"\n    });\n  },\n  mounted: function mounted() {\n    if (localStorage.name) {\n      this.name = localStorage.name;\n    }\n  },\n  watch: {\n    name: function name(newName) {\n      localStorage.name = newName;\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;AAGA,OAAA,QAAA,MAAA,UAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,QAAA,EAAA,IAFA;AAGA,MAAA,IAAA,EAAA;AACA,QAAA,WAAA,EAAA,EADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,QAAA,EAAA,EAHA;AAIA,QAAA,eAAA,EAAA,EAJA;AAKA,QAAA,UAAA,EAAA,EALA;AAMA,QAAA,aAAA,EAAA;AANA,OAHA;AAWA,MAAA,KAAA,EAAA;AAXA,KAAA;AAaA,GAfA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,kBADA,8BACA,KADA,EACA;AACA,WAAA,OAAA,GAAA,KAAA;AACA,KAHA;AAIA,IAAA,YAJA,0BAIA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAA,QAAA,CACA,IADA,GAEA,8BAFA,CAEA,KAAA,IAAA,CAAA,KAFA,EAEA,KAAA,IAAA,CAAA,QAFA,EAGA,IAHA,CAGA,UAAA,IAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,IAAA;;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,OAAA,CAAA,MAAA;AACA,OANA,EAOA,KAPA,CAOA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,QAAA,KAAA,CAAA,OAAA,CAAA;AAAA,OAPA,EAPA,CAeA;AACA,KApBA;AAqBA,IAAA,SAAA,EAAA,qBAAA;AAAA;;AACA,MAAA,QAAA,CACA,IADA,GAEA,0BAFA,CAGA,KAAA,IAAA,CAAA,UAHA,EAIA,KAAA,IAAA,CAAA,aAJA,EAMA,IANA,CAMA,UAAA,IAAA,EAAA;AACA,QAAA,MAAA,CAAA,QAAA,GAAA,IAAA;;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,MAAA;AACA,OATA,EAUA,KAVA,CAUA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,QAAA,KAAA,CAAA,OAAA,CAAA;AAAA,OAVA,EADA,CAYA;AACA;AACA,KAnCA;AAoCA,IAAA,gBApCA,8BAoCA;AAAA;;AACA,UAAA,QAAA,GAAA,IAAA,QAAA,CAAA,IAAA,CAAA,kBAAA,EAAA;AACA,MAAA,QAAA,CACA,IADA,GAEA,eAFA,CAEA,QAFA,EAGA,KAHA,CAGA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,QAAA,KAAA,CAAA,OAAA,CAAA;AAAA,OAHA,EAIA,IAJA,CAIA,UAAA,IAAA,EAAA;AACA,QAAA,MAAA,CAAA,QAAA,GAAA,IAAA;;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,MAAA;AACA,OAPA;AAQA,KA9CA,CA+CA;AACA;AACA;AACA;;AAlDA,GAhBA;AAoEA,EAAA,OApEA,qBAoEA;AACA,SAAA,OAAA,CAAA,GAAA,CAAA,OAAA,EAAA,IAAA,EAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KAAA;AACA,GAtEA;AAuEA,EAAA,OAvEA,qBAuEA;AACA,QAAA,YAAA,CAAA,IAAA,EAAA;AACA,WAAA,IAAA,GAAA,YAAA,CAAA,IAAA;AACA;AACA,GA3EA;AA4EA,EAAA,KAAA,EAAA;AACA,IAAA,IADA,gBACA,OADA,EACA;AACA,MAAA,YAAA,CAAA,IAAA,GAAA,OAAA;AACA;AAHA;AA5EA,CAAA","sourcesContent":["<template src=\"./login.html\"></template>\r\n\r\n<script>\r\nimport firebase from \"firebase\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      show: true,\r\n      isActive: true,\r\n      user: {\r\n        displayName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        emailLogin: \"\",\r\n        passwordLogin: \"\"\r\n      },\r\n      error: false\r\n    };\r\n  },\r\n  methods: {\r\n    updateAnnouncement(value) {\r\n      this.newText = value;\r\n    },\r\n    registerUser() {\r\n      // if (\r\n      //   this.user.password !== this.user.confirmPassword ||\r\n      //   this.user.password.length < 6\r\n      // ) {\r\n      //   this.error = true;\r\n      // } else {\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(this.user.email, this.user.password)\r\n        .then(user => {\r\n          this.authUser = user;\r\n          this.$router.replace(\"home\");\r\n        })\r\n        .catch(error => alert(\"ðŸ¤• \" + error.message));\r\n      //}\r\n    },\r\n    loginUser: function() {\r\n      firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(\r\n          this.user.emailLogin,\r\n          this.user.passwordLogin\r\n        )\r\n        .then(user => {\r\n          this.authUser = user;\r\n          this.$router.replace(\"home\");\r\n        })\r\n        .catch(error => alert(\"ðŸ¤• \" + error.message));\r\n      // this.$cookie.set(\"Login\", \"credentials\", \"1H\");\r\n      // this.$cookie.get(\"test\");\r\n    },\r\n    signInWithGoogle() {\r\n      const provider = new firebase.auth.GoogleAuthProvider();\r\n      firebase\r\n        .auth()\r\n        .signInWithPopup(provider)\r\n        .catch(error => alert(\"ðŸ¤• \" + error.message))\r\n        .then(user => {\r\n          this.authUser = user;\r\n          this.$router.replace(\"home\");\r\n        });\r\n    }\r\n    // created() {\r\n    //   this.$cookie.set(\"login\", \"password\", 1);\r\n    //   this.$cookie.get(\"test\");\r\n    // }\r\n  },\r\n  created() {\r\n    this.$cookie.set(\"token\", true, { expires: \"30s\" });\r\n  },\r\n  mounted() {\r\n    if (localStorage.name) {\r\n      this.name = localStorage.name;\r\n    }\r\n  },\r\n  watch: {\r\n    name(newName) {\r\n      localStorage.name = newName;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style lang=\"scss\" src=\"./login.scss\" scoped>\r\n</style>\r\n"],"sourceRoot":"src/components/login"}]}